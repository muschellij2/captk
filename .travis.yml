language: r
sudo: no
cache: packages
warnings_are_errors: yes
use_bioc: yes
bioc_required: yes
cran: http://cran.rstudio.com
os:
  - linux
  - osx
r:
  - oldrel
  - release
  - devel
matrix:
  allow_failures:
    - r: devel
latex: no
compiler: clang
osx_image: xcode9
env:
  global:
    - R_BUILD_ARGS=" --no-build-vignettes --no-manual"
    - R_CHECK_ARGS=" --timings --as-cran --no-manual --install-args=--build"
    - RGL_USE_NULL=TRUE
    - WARNINGS_ARE_ERRORS=1
    - DISPLAY=:99.0
before_install:
  - ulimit -n 2048
  - export LD_LIBRARY_PATH=/usr/local/clang/lib:${LD_LIBRARY_PATH}
  - export PROJ_DIR=`basename $PWD`
  - export ITK_GLOBAL_DEFAULT_NUMBER_OF_THREADS=1
  - fname=travis_helpers.sh
  - wget -O ${fname} http://bit.ly/travis_helpers
  - cat ${fname}; source ${fname}; rm ${fname}
  - start_xvfb ;
  - export rver=`r_version`;
  - export gh_user=`get_gh_user` ; echo $gh_user ;
  - cat DESCRIPTION
  - export PACKAGE_NAME=`package_name`
  - export RCHECK_DIR=${PACKAGE_NAME}.Rcheck
  - x=`export_clang_cxx`; eval ${x}
  - if [ "$TRAVIS_OS_NAME" = "osx" ]; then no_open_mp ; fi
  - echo "CC=${CC}, CXX=${CXX}, CXX1X=${CXX1X}"
  - echo "CXX1XSTD=${CXX1XSTD}, CXX11=${CXX11}"
  - clang_cxx
  - hdf5_install ;
  - export cmake_version="3.11"
  - cmake --version
  - x=`cmake_setup`; echo "${x}"; eval ${x};
  - cmake --version
  - ./cleanup
  - Rscript -e "install.packages(c('Rcpp', 'RcppEigen'), type = 'source', repos=c(CRAN='https://cran.rstudio.com'))"
  - gh_binary_install neuroconductor/ITKR
  - gh_binary_install neuroconductor/ROpenCVLite
  - cat DESCRIPTION
  - install_remotes_no_dep
  - cat DESCRIPTION
  - echo $PATH ;
  - install_deps_all
script:
  - x=`export_clang_cxx`; eval ${x}
  - travis_wait 100 R CMD build ${R_BUILD_ARGS} .
  - rm -f travis_wait*.log
  - PKG_TARBALL=$(ls -1t *.tar.gz | head -n 1)
  - ls
  - travis_wait 100 R CMD check ${R_CHECK_ARGS} "${PKG_TARBALL}"; CHECK_RET=$? ;
  - rm -f travis_wait*.log
  - if [[ $CHECK_RET -ne 0 ]]; then echo "R CMD check failed"; check_fail; dump_logs;
    check_warnings ; travis_terminate 1; fi
after_failure: dump_logs
after_success:
  - dump_logs
  - ls
  - PKG_FILE_NAME=$(ls -1t *.tar.gz | head -n 1);
  - PKG_TARBALL_WITH_R=`echo $PKG_FILE_NAME | sed 's/.tar.gz/_'"R${rver}"'.tar.gz/'`
    ;
  - if [ "$TRAVIS_OS_NAME" == "osx" ]; then PKG_FILE_NAME=$(ls -1t *.tgz | head -n  1);
    PKG_TARBALL_WITH_R=`echo $PKG_FILE_NAME | sed 's/.tgz/_'"R${rver}"'.tgz/'` ; fi
  - mv ${PKG_FILE_NAME} ${PKG_TARBALL_WITH_R} ;
  - PKG_FILE_NAME=${PKG_TARBALL_WITH_R}  ;
  - if [ "$TRAVIS_OS_NAME" == "linux" ]; then Rscript -e 'covr::codecov(type = "all")';
    fi
before_deploy:
  - if [ "$TRAVIS_OS_NAME" = "osx" ]; then rm -f *.tar.gz; fi
  - if [ "$TRAVIS_OS_NAME" == "osx" ]; then rm -f *.tar.gz; fi
r_check_args: --as-cran --install-args=--build
deploy:
  provider: releases
  skip_cleanup: yes
  file_glob: yes
  file: captk*.t*gz
  'on':
    tags: yes
    repo: muschellij2/captk

